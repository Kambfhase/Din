/*
 * Din - A JavaScript Double Inheritance Framework
 * by Kambfhase
 * v0.1.3
 * MIT License
 */
var Class=function(a){"use strict";var b=a.getOwnPropertyNames(function(){}).concat(["prototype"]),c=function(c){var d=function k(){return k.create.apply(k,arguments)},e,f,g,h=c.parent,i=c["static"],j=c.instance;if(h){e=a.getOwnPropertyNames(h),f=e.length;while(f--)g=e[f],~b.indexOf(g)||a.defineProperty(d,g,a.getOwnPropertyDescriptor(h,g))}i&&a.defineProperties(d,i),d.prototype=a.create(h&&h.prototype||a.prototype,j),a.defineProperty(d.prototype,"constructor",{value:d,enumerable:!1,configurable:!0,writable:!0}),d.create||(d.create=function(){return a.create(this.prototype)}),d.is||(d.is=function(a){return this.prototype.isPrototypeOf(a)});return d},d=function(b){var c={},d,e=a.getOwnPropertyNames(b),f=e.length;while(f--)d=e[f],c[d]=a.getOwnPropertyDescriptor(b,d);return c},e=function(b,c){var d=b.parent,e=b["static"],f=b.instance,g,h,i,j,k;c=c||"super";if(!d)return b;if(e){g=a.getOwnPropertyNames(e),i=g.length;while(i--)h=g[i],j=e[h],k=j.value,k&&typeof k==="function"&&(k[c]=d[h])}if(f){g=a.getOwnPropertyNames(f),i=g.length;while(i--)h=g[i],j=f[h],k=j.value,k&&typeof k==="function"&&(k[c]=d.prototype[h])}return b};return c({"static":d({create:c,toPropertyDescriptorMap:d,addSuper:e})})}(Object);